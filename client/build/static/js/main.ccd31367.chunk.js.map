{"version":3,"sources":["queries.js","components/EntryForm.js","components/Landing.js","components/Logout.js","components/MobileNav.js","components/TopBar.js","components/LoadingSpinner.js","components/Home.js","components/Balances.js","components/AddLoan.js","components/Friends.js","faqList.js","components/Faq.js","components/ErrorPage.js","components/Main.js","components/Footer.js","App.js","theme.js","index.js"],"names":["USER_DATA","gql","GET_FRIENDS","CREATE_FRIEND","UPDATE_FRIENDSHIP","CREATE_USER","LOGIN_USER","CREATE_LOAN","SETTLE_BALANCE","GET_TOTAL_BALANCE","GET_ALL_BALANCES","EntryForm","setToken","useState","entryForm","setEntryForm","name","setName","username","setUsername","email","setEmail","password","setPassword","toast","useToast","useMutation","onError","error","console","log","title","description","graphQLErrors","message","status","duration","isClosable","logInUser","result","createUser","useEffect","data","token","login","value","localStorage","setItem","handleSubmit","event","a","preventDefault","variables","mx","px","py","border","borderStyle","borderColor","borderRadius","boxShadow","bg","spacing","onSubmit","type","required","onChange","target","isFullWidth","colorScheme","size","color","onClick","Landing","direction","base","md","w","h","pt","align","width","src","fontSize","pb","as","Logout","navigate","useNavigate","client","useApolloClient","clear","clearStore","MobileNav","useDisclosure","isOpen","onOpen","onClose","btnRef","useRef","icon","ref","placement","finalFocusRef","RouterLink","to","TopBar","p","display","LoadingSpinner","thickness","my","Home","balance","userResult","useQuery","balanceResult","loading","me","m","maxW","textAlign","Intl","NumberFormat","format","getTotalBalance","mt","Balances","balancesResult","refetchQueries","query","settleBalance","allowToggle","allBalances","map","friend","balanceWithFriend","loans","reduce","total","currentLoan","amount","flex","variant","divider","loan","Date","Number","createdAt","toLocaleString","item","id","counterparty","friendObject","AddLoan","setCounterparty","setAmount","friendsResult","createLoan","loanResult","addLoan","debtor","defaultValue","disabled","hidden","getFriends","filter","placeholder","Friends","createFriend","updateFriendship","friendRequestName","setFriendRequestName","updateFriend","friendshipId","action","mb","f","length","isTarget","isAttached","mr","isRequired","faqList","question","answer","Faq","allowMultiple","faq","ErrorPage","noOfLines","Main","centerContent","path","element","Footer","App","getItem","minHeight","templateRows","theme","extendTheme","colors","brand","fonts","heading","body","authLink","setContext","_","headers","authorization","uri","process","PORT","httpLink","HttpLink","ApolloClient","cache","InMemoryCache","link","concat","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"gSAEaA,EAAYC,YAAH,qIAWTC,EAAcD,YAAH,gNAeXE,EAAgBF,YAAH,2JAUbG,EAAoBH,YAAH,+NAWjBI,EAAcJ,YAAH,oRAaXK,EAAaL,YAAH,kMAWVM,EAAcN,YAAH,mRAeXO,EAAiBP,YAAH,kJAQdQ,EAAoBR,YAAH,iFAMjBS,EAAmBT,YAAH,gM,OCqCdU,EA3HG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,EAAkCC,mBAAS,SAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,mBAAS,IAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KAEMC,EAAQC,cAEd,EAA4BC,YAAYpB,EAAY,CAClDqB,QAAS,SAACC,GACRC,QAAQC,IAAIF,GACZJ,EAAM,CACJO,MAAO,QACPC,YAAaJ,EAAMK,cAAc,GAAGC,QACpCC,OAAQ,QACRC,SAAU,IACVC,YAAY,OARlB,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,EAAqBb,YAAYrB,EAAa,CAC5CsB,QAAS,SAACC,GACRC,QAAQC,IAAIF,GACZJ,EAAM,CACJO,MAAO,QACPC,YAAaJ,EAAMK,cAAc,GAAGC,QACpCC,OAAQ,QACRC,SAAU,IACVC,YAAY,OARXG,EAAP,oBAaAC,qBAAU,WACR,GAAIF,EAAOG,KAAM,CACf,IAAMC,EAAQJ,EAAOG,KAAKE,MAAMC,MAChCjC,EAAS+B,GACTG,aAAaC,QAAQ,aAAcJ,MAEpC,CAACJ,EAAOG,OAEX,IAIMM,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,yDACnBD,EAAME,iBACFC,EAAY,CACdlC,WACAI,WACAN,OACAI,SAEgB,UAAdN,EARe,gBASjBwB,EAAU,CAAEc,cACZjC,EAAY,IACZI,EAAY,IAXK,wCAaXiB,EAAW,CAAEY,cAbF,QAcjB5B,EAAM,CACJO,MAAO,UACPC,YAAY,uBAAD,OAAyBhB,EAAzB,aAAkCE,EAAlC,KACXiB,OAAQ,UACRC,SAAU,IACVC,YAAY,IAEdtB,EAAa,SArBI,QAuBnBE,EAAQ,IACRI,EAAS,IAxBU,4CAAH,sDA2BlB,OACE,cAAC,IAAD,CACEgC,GAAI,EACJC,GAAI,GACJC,GAAI,EACJC,OAAQ,EACRC,YAAY,QACZC,YAAY,UACZC,aAAc,KACdC,UAAW,KACXC,GAAG,UATL,SAWE,eAAC,IAAD,CAAQC,QAAS,EAAjB,UACE,cAAC,IAAD,UAAyB,UAAdhD,EAAyB,SAAW,YAC/C,cAAC,IAAD,IACA,sBAAMiD,SAAUf,EAAhB,SACE,eAAC,IAAD,WACiB,WAAdlC,GACD,eAAC,IAAD,WACE,cAAC,IAAD,mBACA,cAAC,IAAD,CAAOkD,KAAK,OAAOnB,MAAO7B,EAAMiD,UAAQ,EAACC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBlD,EAAQkD,EAAOtB,aAGrE,WAAd/B,GACD,eAAC,IAAD,WACE,cAAC,IAAD,oBACA,cAAC,IAAD,CAAOkD,KAAK,QAAQnB,MAAOzB,EAAO6C,UAAQ,EAACC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB9C,EAAS8C,EAAOtB,aAGvF,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,CAAOmB,KAAK,OAAOnB,MAAO3B,EAAU+C,UAAQ,EAACC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBhD,EAAYgD,EAAOtB,aAE5F,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,cAAC,IAAD,CAAOmB,KAAK,WAAWnB,MAAOvB,EAAU2C,UAAQ,EAACC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgB5C,EAAY4C,EAAOtB,aAEhG,cAAC,IAAD,CAAQmB,KAAK,SAASI,aAAW,EAACC,YAAY,MAAMR,GAAG,UAAvD,SAAiF,UAAd/C,EAAyB,SAAW,wBAG3G,cAAC,IAAD,IACA,cAAC,IAAD,CAAQwD,KAAK,KAAKD,YAAY,OAAOE,MAAM,QAAQC,QAxEhC,WACGzD,EAAX,UAAdD,EAAsC,SAAyB,UAuE5D,SACkB,UAAdA,EAAyB,yBAA2B,8BCnGjD2D,EArBC,SAAC,GAAkB,IAAhB7D,EAAe,EAAfA,SAEjB,OACC,eAAC,IAAD,CAAM8D,UAAW,CAAEC,KAAM,SAAUC,GAAI,OAAvC,UACE,cAAC,IAAD,CAAKC,EAAG,CAAEF,KAAM,OAAQC,GAAI,OAASE,EAAG,CAAEH,KAAM,OAAQC,GAAI,SAAWf,GAAG,WAA1E,SACE,cAAC,IAAD,CAAKkB,GAAI,CAAEJ,KAAM,EAAGC,GAAI,IAAMtB,GAAI,CAAEqB,KAAM,EAAGC,GAAI,IAAjD,SACE,eAAC,IAAD,CAAQI,MAAM,OAAOlB,QAAS,CAAEa,KAAM,EAAGC,GAAI,GAA7C,UACE,cAAC,IAAD,CAAOK,MAAO,CAAEN,KAAM,QAASC,GAAI,SAAWM,IAAI,4BAClD,cAAC,IAAD,CAAMC,SAAU,CAAER,KAAM,KAAMC,GAAI,OAASL,MAAM,QAAQa,GAAI,CAAET,KAAM,EAAGC,GAAI,IAA5E,8CACA,cAAC,IAAD,CAAMS,GAAG,IAAIF,SAAU,CAAER,KAAM,KAAMC,GAAI,OAASL,MAAM,QAAQa,GAAI,EAApE,+DAIN,cAAC,IAAD,CAAKP,EAAG,CAAEF,KAAM,OAAQC,GAAI,OAASE,EAAG,CAAEH,KAAM,OAAQC,GAAI,SAAWG,GAAI,CAAEJ,KAAM,IAAKC,GAAI,KAA5F,SACE,cAAC,IAAD,CAAQE,EAAE,OAAV,SACE,cAAC,EAAD,CAAWlE,SAAUA,Y,SCLf0E,EAlBA,SAAC,GAAkB,IAAhB1E,EAAe,EAAfA,SACV2E,EAAWC,cACXC,EAASC,cASf,OACE,wBAAQlB,QARU,WAClB5D,EAAS,MACTkC,aAAa6C,QACbJ,EAAS,KACTE,EAAOG,cAIP,uB,wBCyCWC,EAtCG,SAAC,GAAkB,IAAhBjF,EAAe,EAAfA,SACnB,EAAoCkF,cAA5BC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,OAAQC,EAAxB,EAAwBA,QAClBC,EAASC,mBAEf,OACE,qCACE,cAAC,IAAD,CAAYC,KAAM,cAAC,IAAD,IAAmB/B,YAAY,UAAUC,KAAK,KAAK+B,IAAKH,EAAQ1B,QAASwB,IAC3F,eAAC,IAAD,CACED,OAAQA,EACRO,UAAU,QACVL,QAASA,EACTM,cAAeL,EAJjB,UAME,cAAC,IAAD,IACA,eAAC,IAAD,CAAerC,GAAG,WAAlB,UACE,cAAC,IAAD,CAAmBU,MAAM,UACzB,cAAC,IAAD,CAAcA,MAAM,UAApB,oBAEA,cAAC,IAAD,CAAYA,MAAM,QAAQY,SAAU,GAApC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAME,GAAImB,IAAYC,GAAG,IAAIjC,QAASyB,EAAtC,kBACA,cAAC,IAAD,CAAMZ,GAAImB,IAAYC,GAAG,YAAYjC,QAASyB,EAA9C,sBACA,cAAC,IAAD,CAAMZ,GAAImB,IAAYC,GAAG,OAAOjC,QAASyB,EAAzC,sBACA,cAAC,IAAD,CAAMZ,GAAImB,IAAYC,GAAG,WAAWjC,QAASyB,EAA7C,qBACA,cAAC,IAAD,CAAMZ,GAAImB,IAAYC,GAAG,OAAOjC,QAASyB,EAAzC,iBACA,cAAC,EAAD,CAAQrF,SAAUA,EAAU4D,QAASyB,SAIzC,cAAC,IAAD,cCLKS,EA7BA,SAAC,GAAkB,IAAhB9F,EAAe,EAAfA,SAEhB,OACE,cAAC,IAAD,CAAKiD,GAAG,YAAYgB,EAAE,OAAO8B,EAAG,EAAGpC,MAAM,UAAzC,SACE,eAAC,IAAD,CAAMS,MAAM,SAAZ,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,MAAM,QAAQC,IAAI,8BAE3B,cAAC,IAAD,IACA,cAAC,IAAD,CAAK0B,QAAS,CAAEjC,KAAM,OAAQC,GAAI,SAAlC,SACE,eAAC,IAAD,CAAQd,QAAS,EAAjB,UACE,cAAC,IAAD,CAAMuB,GAAImB,IAAYC,GAAG,IAAzB,kBACA,cAAC,IAAD,CAAMpB,GAAImB,IAAYC,GAAG,YAAzB,sBACA,cAAC,IAAD,CAAMpB,GAAImB,IAAYC,GAAG,OAAzB,sBACA,cAAC,IAAD,CAAMpB,GAAImB,IAAYC,GAAG,WAAzB,qBACA,cAAC,IAAD,CAAMpB,GAAImB,IAAYC,GAAG,OAAzB,iBACA,cAAC,EAAD,CAAQ7F,SAAUA,SAGtB,cAAC,IAAD,CAAKgG,QAAS,CAAEjC,KAAM,QAASC,GAAI,QAAnC,SACE,cAAC,IAAD,UACE,cAAC,EAAD,CAAWhE,SAAUA,c,iBC5BlBiG,GAJQ,WACrB,OAAO,cAAC,IAAD,CAAStC,MAAM,UAAUD,KAAK,KAAKwC,UAAW,EAAGC,GAAG,UCkE9CC,GAzDF,WACX,IAG2BC,EAHrBC,EAAaC,YAASnH,GACtBoH,EAAgBD,YAAS1G,GAoB/B,OAAIyG,EAAWG,SAAWD,EAAcC,QAC/B,cAAC,GAAD,IAIP,eAAC,IAAD,WACE,cAAC,IAAD,CAAQjC,GAAI,EAAZ,SACE,eAAC,IAAD,iBAAa8B,EAAWxE,KAAK4E,GAAGtG,KAAhC,SAEF,cAAC,IAAD,UACE,cAAC,IAAD,CAAMmE,SAAS,KAAf,wCAEF,cAAC,IAAD,UACA,cAAC,IAAD,CACEtB,GAAG,UACHU,MAAM,QACNgD,EAAG,EACHZ,EAAG,EACHlD,YAAY,QACZC,YAAY,UACZC,aAAc,KACdC,UAAW,KACX4D,KAAM,KACNC,UAAU,SAVZ,SAYE,eAAC,IAAD,CAASpC,GAAG,KAAKf,KAAK,KAAtB,UAA6B,IAAIoD,KAAKC,aAAa,SAASC,OAAOR,EAAc1E,KAAKmF,iBAAtF,cAGF,cAAC,IAAD,CAAQC,GAAI,GAAZ,SACE,cAAC,IAAD,CAASzC,GAAG,KAAKf,KAAK,KAAtB,UA/CqB2C,EA+CyBG,EAAc1E,KAAKmF,gBA9CjEZ,EAAU,IACL,yCACEA,EAAU,IACZ,6BACEA,EAAU,EACZ,2CACc,IAAZA,EACF,6DACEA,GAAW,IACb,2BACEA,GAAW,IACb,gCAEA,mD,UCgGEc,GArGE,WACf,IAAMC,EAAiBb,YAASzG,GAChC,EAAwBgB,YAAYlB,EAAgB,CAClDyH,eAAgB,CAAE,CAACC,MAAOxH,GAAmB,CAACwH,MAAOzH,MADhD0H,EAAP,oBAIM3G,EAAQC,cAed,OAAIuG,EAAeX,QACV,cAAC,GAAD,IAIP,eAAC,IAAD,CAAKxC,EAAE,OAAP,UACE,cAAC,IAAD,CAAQO,GAAI,EAAZ,SACE,cAAC,IAAD,yBAEF,cAAC,IAAD,CAAKP,EAAE,OAAP,SACE,cAAC,KAAD,CAAWuD,aAAW,EAAtB,SACGJ,EAAetF,KAAK2F,YAAYC,KAAI,SAAAC,GACnC,IAAMC,EAAoBD,EAAOE,MAAMC,QAAO,SAACC,EAAOC,GACpD,OAAOD,EAAQC,EAAYC,SAC1B,GAEH,OACA,eAAC,KAAD,CAA+BtF,GAAI,GAAnC,UACE,6BACE,eAAC,KAAD,WACE,eAAC,IAAD,CAAQuF,KAAK,IAAIrB,UAAU,OAA3B,UACE,cAAC,IAAD,CAASpC,GAAG,KAAKf,KAAK,KAAtB,SAA4BiE,EAAOvH,OACnC,eAAC,IAAD,CAAO+H,QAAQ,QAAQ5D,SAAS,KAAKd,YAAamE,EAAoB,EAAI,QAAU,MAApF,UAA4F,IAAId,KAAKC,aAAa,SAASC,OAAOY,GAAlI,aAEF,cAAC,KAAD,SAGJ,eAAC,KAAD,CAAgBpD,GAAI,EAApB,UACE,cAAC,IAAD,CACEJ,MAAM,OACNlB,QAAS,EACTkF,QAAS,cAAC,IAAD,CAActF,YAAY,aAHrC,SAKC6E,EAAOE,MAAMH,KAAI,SAAAW,GAChB,OACI,eAAC,IAAD,WACGA,EAAKJ,OAAS,EAAI,cAAC,IAAD,CAAStE,MAAM,UAAY,cAAC,IAAD,CAAWA,MAAM,YAC/D,eAAC,IAAD,WACE,cAAC,IAAD,CAAMc,GAAG,IAAT,SAAc,IAAI6D,KAAKC,OAAOF,EAAKG,YAAYC,mBAC/C,cAAC,IAAD,UAAOJ,EAAKK,OACZ,eAAC,IAAD,CAAOjF,YAAa4E,EAAKJ,OAAS,EAAI,QAAU,MAAhD,UAAwD,IAAInB,KAAKC,aAAa,SAASC,OAAOqB,EAAKJ,QAAnG,eALSI,EAAKM,SAWxB,cAAC,IAAD,CAASxC,GAAI,IACb,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBlC,EAAG,GAAIC,EAAG,GAAIP,MAAM,aACnCiE,EAAoB,EAEnB,eAAC,IAAD,WACI,eAAC,IAAD,CAAMzB,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,UAA4CoD,EAAOvH,KAAnD,aAAmE,IAAI0G,KAAKC,aAAa,SAASC,OAAOY,GAAzG,WACA,cAAC,IAAD,CAAMzB,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,0DACA,cAAC,IAAD,CAAM4B,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,8FACA,cAAC,IAAD,CACEd,YAAY,OACZG,QAAS,kBArE/B2D,EAAc,CAAE/E,UAAW,CAACoG,cADTC,EAsE8BlB,GArEMgB,WAEvD/H,EAAM,CACJO,MAAO,UACPC,YAAY,gBAAD,OAAkByH,EAAazI,KAA/B,gCACXmB,OAAQ,UACRC,SAAU,IACVC,YAAY,IARI,IAACoH,GAoEC,mCAQJ,eAAC,IAAD,WACE,eAAC,IAAD,CAAM1C,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,qBAAoDoD,EAAOvH,KAA3D,IAAkE,IAAI0G,KAAKC,aAAa,SAASC,QAA4B,EAArBY,GAAxG,WACA,cAAC,IAAD,CAAMzB,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,0DACA,eAAC,IAAD,CAAM4B,GAAI,EAAGxC,MAAM,UAAUY,SAAS,KAAtC,UAA4CoD,EAAOvH,KAAnD,4EAjDUuH,EAAOgB,e,oBCkDxBG,GA5FC,WACd,MAAwC7I,mBAAS,WAAjD,mBAAO2I,EAAP,KAAqBG,EAArB,KACA,EAA4B9I,mBAAS,IAArC,mBAAOgI,EAAP,KAAee,EAAf,KACA,EAAwB/I,mBAAS,IAAjC,mBAAOyI,EAAP,KAAavG,EAAb,KACMvB,EAAQC,cAERoI,EAAgB1C,YAASjH,GAC/B,EAAiCwB,YAAYnB,EAAa,CACxD0H,eAAgB,CAAE,CAACC,MAAOxH,GAAmB,CAACwH,MAAOzH,MADvD,mBAAOqJ,EAAP,KAAmBC,EAAnB,KAIAtH,qBAAU,WACJsH,EAAWrH,MACblB,EAAM,CACJO,MAAO,UACPC,YAAY,aAAD,OAAe+H,EAAWrH,KAAKsH,QAAQC,OAAOjJ,KAA9C,oBACXmB,OAAQ,UACRC,SAAU,IACVC,YAAY,MAGf,CAAC0H,EAAWrH,KAAMlB,IAErB,IAAMwB,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sDACnBD,EAAME,iBACFC,EAAY,CACdoG,eACAX,OAAQM,OAAON,GACfS,QAGFQ,EAAW,CAAE1G,cAEbwG,EAAU,IACV7G,EAAQ,IAXW,2CAAH,sDAelB,OAAI8G,EAAcxC,QACT,cAAC,GAAD,IAIP,gCACE,cAAC,IAAD,CAAQjC,GAAI,EAAZ,SACE,cAAC,IAAD,yBAEF,sBAAMrB,SAAUf,EAAhB,SACE,eAAC,IAAD,CAAQgC,MAAM,UAAd,UACE,eAAC,IAAD,WACE,cAAC,IAAD,0BACA,eAAC,KAAD,CAAQf,UAAQ,EAACiG,aAAcV,EAActF,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBwF,EAAgBxF,EAAOtB,QAA9F,UACE,wBAAQA,MAAM,UAAUsH,UAAQ,EAACC,QAAM,EAAvC,2BACCP,EAAcnH,KAAK2H,WACjBC,QAAO,SAAAb,GAAY,MAA4B,WAAxBA,EAAatH,UACpCmG,KAAI,SAAAmB,GACL,OAAO,wBAAqC5G,MAAO4G,EAAalB,OAAOgB,GAAhE,SAAqEE,EAAalB,OAAOvH,MAA5EyI,EAAalB,OAAOgB,aAI9C,eAAC,IAAD,WACE,cAAC,IAAD,uBACA,eAAC,KAAD,CACE1G,MAAOgG,EADT,UAGE,cAAC,KAAD,CACE3E,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByF,EAAUzF,EAAOtB,QAC3CoB,UAAQ,EACRsG,YAAY,QAEd,eAAC,KAAD,WACE,cAAC,KAAD,IACA,cAAC,KAAD,aAIN,eAAC,IAAD,WACE,cAAC,IAAD,kBACA,cAAC,IAAD,CACErG,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBpB,EAAQoB,EAAOtB,QACzCoB,UAAQ,EACRsG,YAAY,YACZ1H,MAAOyG,OAGX,cAAC,IAAD,CAAQlF,aAAW,EAACC,YAAY,OAAOE,MAAM,QAAQP,KAAK,SAA1D,+BC4CKwG,GA1HC,WACd,IAAMjI,EAAS4E,YAASjH,GACxB,EAAuBwB,YAAYvB,EAAe,CAChD8H,eAAgB,CAAE,CAACC,MAAOhI,IAC1ByB,QAAS,SAACC,GACRJ,EAAM,CACJO,MAAO,QACPC,YAAaJ,EAAMK,cAAc,GAAGC,QACpCC,OAAQ,QACRC,SAAU,IACVC,YAAY,OARXoI,EAAP,oBAYA,EAA2B/I,YAAYtB,EAAmB,CACxD6H,eAAgB,CAAE,CAACC,MAAOhI,GAAc,CAACgI,MAAOxH,GAAmB,CAACwH,MAAOzH,MADtEiK,EAAP,oBAIA,EAAkD7J,mBAAS,IAA3D,mBAAO8J,EAAP,KAA0BC,EAA1B,KACMpJ,EAAQC,cAURoJ,EAAe,SAACC,EAAcC,GAClClJ,QAAQC,IAAIgJ,EAAeC,GAC3BL,EAAiB,CAAEtH,UAAW,CAAE0H,eAAcC,aAGhD,OAAIxI,EAAO8E,QACF,cAAC,GAAD,IAIP,eAAC,IAAD,CAAKxC,EAAE,OAAP,UACE,cAAC,IAAD,CAAQO,GAAI,EAAZ,SACE,cAAC,IAAD,wBAEF,eAAC,IAAD,CAAQtB,QAAS,EAAjB,UACE,eAAC,IAAD,CAAKe,EAAE,OAAP,UACE,cAAC,IAAD,CAASQ,GAAG,KAAKf,KAAK,KAAK0G,GAAI,EAAGzG,MAAM,UAAxC,0BACA,cAAC,IAAD,CAAQS,MAAM,UAAUlB,QAAS,EAAjC,SAC0E,IAArEvB,EAAOG,KAAK2H,WAAWC,QAAO,SAAAW,GAAC,MAAiB,WAAbA,EAAE9I,UAAqB+I,OACvD,cAAC,IAAD,CAAS5G,KAAK,KAAd,wDACA/B,EAAOG,KAAK2H,WACbC,QAAO,SAAAb,GAAY,MAA4B,WAAxBA,EAAatH,UACpCmG,KAAI,SAAAmB,GACH,OACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAASnF,KAAK,KAAd,UAAoBmF,EAAalB,OAAOvH,KAAxC,KAAgDyI,EAAalB,OAAOrH,SAApE,OACA,cAAC,IAAD,UAAOuI,EAAalB,OAAOnH,WAE7B,cAAC,IAAD,IACA,cAAC,IAAD,CAAYgF,KAAM,cAAC,IAAD,IAAgB5B,QAAS,kBAAMqG,EAAapB,EAAaF,GAAI,gBAEjF,cAAC,IAAD,MATQE,EAAaF,YAgBnC,eAAC,IAAD,CAAK1E,EAAE,OAAP,UACE,cAAC,IAAD,CAASQ,GAAG,KAAKf,KAAK,KAAK0G,GAAI,EAAGzG,MAAM,UAAxC,8BACA,cAAC,IAAD,CAAQS,MAAM,UAAUlB,QAAS,EAAjC,SAC2E,IAAtEvB,EAAOG,KAAK2H,WAAWC,QAAO,SAAAW,GAAC,MAAiB,YAAbA,EAAE9I,UAAsB+I,OACxD,cAAC,IAAD,CAAS5G,KAAK,KAAd,wDACA/B,EAAOG,KAAK2H,WACXC,QAAO,SAAAb,GAAY,MAA4B,YAAxBA,EAAatH,UACpCmG,KAAI,SAAAmB,GACH,OACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,CAASnF,KAAK,KAAd,UAAoBmF,EAAalB,OAAOvH,KAAxC,KAAgDyI,EAAalB,OAAOrH,SAApE,OACA,cAAC,IAAD,UAAOuI,EAAalB,OAAOnH,WAE7B,cAAC,IAAD,IACCqI,EAAa0B,SACV,eAAC,IAAD,CAAaC,YAAU,EAAvB,UACE,cAAC,IAAD,CAAYhF,KAAM,cAAC,IAAD,IAAeiF,GAAG,MAAM7G,QAAS,kBAAMqG,EAAapB,EAAaF,GAAI,aACvF,cAAC,IAAD,CAAYnD,KAAM,cAAC,IAAD,IAAe5B,QAAS,kBAAMqG,EAAapB,EAAaF,GAAI,gBAEhF,cAAC,IAAD,CAAYnD,KAAM,cAAC,IAAD,IAAgB5B,QAAS,kBAAMqG,EAAapB,EAAaF,GAAI,gBAGrF,cAAC,IAAD,MAfQE,EAAaF,YAsBrC,eAAC,IAAD,CAAK1E,EAAE,OAAP,UACE,cAAC,IAAD,CAASQ,GAAG,KAAKf,KAAK,KAAK0G,GAAI,EAAGzG,MAAM,UAAxC,wBACA,sBAAMR,SAjFO,SAACd,GACpBA,EAAME,iBACNsH,EAAa,CAAErH,UAAW,CACxBe,OAAQwG,KAEVC,EAAqB,KA4Ef,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAaU,YAAU,EAAvB,SACE,cAAC,IAAD,CACE9D,KAAK,MACLxD,KAAK,OACLnB,MAAO8H,EACPJ,YAAY,oBACZrG,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgByG,EAAqBzG,EAAOtB,YAG1D,cAAC,IAAD,CAAYuD,KAAM,cAAC,IAAD,IAAepC,KAAK,0BClGrCuH,GA5CC,CACd,CACEhC,GAAI,EACJiC,SAAU,kCACVC,OAAQ,6LAEV,CACElC,GAAI,EACJiC,SAAU,4BACVC,OAAQ,qGAEV,CACElC,GAAI,EACJiC,SAAU,iCACVC,OAAQ,6KAEV,CACElC,GAAI,EACJiC,SAAU,wBACVC,OAAQ,6FAEV,CACElC,GAAI,EACJiC,SAAU,sBACVC,OAAQ,sBAEV,CACElC,GAAI,EACJiC,SAAU,iCACVC,OAAQ,8LAEV,CACElC,GAAI,EACJiC,SAAU,sBACVC,OAAQ,sKAEV,CACElC,GAAI,EACJiC,SAAU,kCACVC,OAAQ,sFCIGC,GA5BH,WACV,OACE,eAAC,IAAD,CAAK7G,EAAE,OAAP,UACE,cAAC,IAAD,CAAQO,GAAI,EAAZ,SACE,cAAC,IAAD,oBAEF,cAAC,KAAD,CAAWuG,eAAa,EAAxB,SACGJ,GAAQjD,KAAI,SAACsD,GACZ,OACE,eAAC,KAAD,WACE,6BACE,eAAC,KAAD,WACE,cAAC,IAAD,CAAK9C,KAAK,IAAIrB,UAAU,OAAxB,SACE,cAAC,IAAD,CAAMpC,GAAG,IAAIF,SAAS,KAAtB,SAA4ByG,EAAIJ,aAElC,cAAC,KAAD,SAGJ,cAAC,KAAD,CAAgBpG,GAAI,EAApB,SACGwG,EAAIH,WAVWG,EAAIrC,a,UCNrBsC,GAVG,WAChB,OACE,eAAC,IAAD,CAAKhH,EAAE,OAAP,UACE,cAAC,IAAD,CAAQO,GAAI,EAAZ,SACE,cAAC,IAAD,gDAEF,cAAC,KAAD,CAAc0C,GAAG,IAAIgE,UAAW,GAAIhI,QAAQ,UCmBnCiI,GArBF,WACX,OACE,cAAC,IAAD,CACEvE,KAAK,eACLwE,eAAa,EACbjF,GAAI,EACJJ,EAAG,EACH9C,GAAG,QALL,SAOE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoI,KAAK,IAAIC,QAAS,cAAC,GAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,GAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,GAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,OAAOC,QAAS,cAAC,GAAD,MAC5B,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,GAAD,YCTlBC,GAXA,WAEb,OACE,cAAC,IAAD,CAAKtI,GAAG,UAAUgB,EAAE,OAAO8B,EAAG,EAAGpC,MAAM,QAAvC,SACE,cAAC,IAAD,UACE,cAAC,IAAD,wCCuCO6H,GAtCH,WACV,MAA0BvL,mBAAS,MAAnC,mBAAO8B,EAAP,KAAc/B,EAAd,KASA,OAPA6B,qBAAU,WACR,IAAME,EAAQG,aAAauJ,QAAQ,cAC/B1J,GACF/B,EAAS+B,KAEV,IAEEA,EAaH,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CACE2J,UAAU,QACVC,aAAa,gBAFf,UAIE,cAAC,EAAD,CAAQ3L,SAAUA,IAClB,cAAC,GAAD,IACA,cAAC,GAAD,WAnBJ,8BACA,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOqL,KAAK,IAAIC,QAAS,cAAC,EAAD,CAAStL,SAAUA,a,SCTvC4L,GAFDC,aAAY,CAAEC,OAbb,CACbC,MAAO,CACL,IAAK,UACL,IAAK,UACL,IAAK,YAS2BC,MALtB,CACZC,QAAS,WACTC,KAAM,c,2DCHFC,GAAWC,cAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1BvK,EAAQG,aAAauJ,QAAQ,cACnC,MAAO,CACLa,QAAQ,2BACHA,GADE,IAELC,cAAexK,EAAK,iBAAaA,GAAU,WAK3CyK,GAAMC,mIAAYC,MAAQ,wBAE1BC,GAAW,IAAIC,KAAS,CAAEJ,IAAI,GAAD,OAAKA,GAAL,cAE7B3H,GAAS,IAAIgI,KAAa,CAC9BC,MAAO,IAAIC,KACXC,KAAMb,GAASc,OAAON,MAGxBO,IAASC,OACP,cAACC,GAAA,EAAD,CAAgBvI,OAAQA,GAAxB,SACE,cAAC,KAAD,CAAgB+G,MAAOA,GAAvB,SACE,cAAC,GAAD,QAGJyB,SAASC,eAAe,W","file":"static/js/main.ccd31367.chunk.js","sourcesContent":["import { gql } from '@apollo/client'\r\n\r\nexport const USER_DATA = gql`\r\n  query getUserByToken {\r\n    me {\r\n      name\r\n      username\r\n      email\r\n      password\r\n    }\r\n  }\r\n`\r\n\r\nexport const GET_FRIENDS = gql`\r\n  query getFriendsById {\r\n    getFriends {\r\n      id\r\n      friend {\r\n        id\r\n        username\r\n        name\r\n        email\r\n      }\r\n      isTarget\r\n      status\r\n    }\r\n  }\r\n`\r\nexport const CREATE_FRIEND = gql`\r\n  mutation addFriendByUsername ($target: String!) {\r\n    addFriend(\r\n      target: $target\r\n    ) {\r\n      status\r\n    }\r\n  }\r\n`\r\n\r\nexport const UPDATE_FRIENDSHIP = gql`\r\n  mutation updateFriendshipById ($friendshipId: String!, $action: String!) {\r\n    updateFriendship(\r\n      friendshipId: $friendshipId,\r\n      action: $action\r\n    ) {\r\n      status\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_USER = gql`\r\n  mutation addNewUser ($name: String!, $username: String!, $email: String!, $password: String!,) {\r\n    addUser(\r\n      name: $name,\r\n      username: $username,\r\n      email: $email,\r\n      password: $password\r\n    ) {\r\n      username\r\n    }\r\n  }\r\n`\r\n\r\nexport const LOGIN_USER = gql`\r\n  mutation loginUser ($username: String!, $password: String!) {\r\n    login(\r\n      username: $username,\r\n      password: $password\r\n    ) {\r\n      value\r\n    }\r\n  }\r\n`\r\n\r\nexport const CREATE_LOAN = gql`\r\n  mutation createLoan($counterparty: String!, $item: String!, $amount: Float!) {\r\n    addLoan(\r\n      counterparty: $counterparty,\r\n      item: $item,\r\n      amount: $amount\r\n    ) {\r\n      item\r\n      debtor {\r\n        name\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const SETTLE_BALANCE = gql`\r\n  mutation deleteLoans($counterparty: String!) {\r\n    settleBalance(\r\n      counterparty: $counterparty,\r\n    )\r\n  }\r\n`\r\n\r\nexport const GET_TOTAL_BALANCE = gql`\r\n  query GetTotalBalance {\r\n    getTotalBalance\r\n  }\r\n`\r\n\r\nexport const GET_ALL_BALANCES = gql`\r\n  query GetAllBalances {\r\n    allBalances {\r\n      id\r\n      name\r\n      loans {\r\n        id\r\n        amount\r\n        item\r\n        createdAt\r\n      }\r\n    }\r\n  }\r\n`","import React, { useState, useEffect } from 'react'\r\nimport { useMutation } from '@apollo/client'\r\nimport {\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  useToast,\r\n  VStack,\r\n} from \"@chakra-ui/react\"\r\n\r\nimport { LOGIN_USER, CREATE_USER } from '../queries'\r\n\r\nconst EntryForm = ({ setToken }) => {\r\n  const [entryForm, setEntryForm] = useState('logIn')\r\n  const [name, setName] = useState('')\r\n  const [username, setUsername] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n\r\n  const toast = useToast()\r\n\r\n  const [logInUser, result] = useMutation(LOGIN_USER, {\r\n    onError: (error) => {\r\n      console.log(error)\r\n      toast({\r\n        title: 'Error',\r\n        description: error.graphQLErrors[0].message,\r\n        status: 'error',\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n  })\r\n\r\n  const [createUser] = useMutation(CREATE_USER, {\r\n    onError: (error) => {\r\n      console.log(error)\r\n      toast({\r\n        title: 'Error',\r\n        description: error.graphQLErrors[0].message,\r\n        status: 'error',\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }    \r\n  })\r\n\r\n  useEffect(() => {\r\n    if (result.data) {\r\n      const token = result.data.login.value\r\n      setToken(token)\r\n      localStorage.setItem('user-token', token)\r\n    }\r\n  }, [result.data]) // eslint-disable-line\r\n\r\n  const handleFormSwitch = () => {\r\n    (entryForm === 'logIn') ? setEntryForm('signUp') : setEntryForm('logIn')\r\n  }\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    let variables = {\r\n      username,\r\n      password,\r\n      name,\r\n      email\r\n    }\r\n    if (entryForm === 'logIn') {\r\n      logInUser({ variables })\r\n      setUsername('')\r\n      setPassword('')\r\n    } else {\r\n      await createUser({ variables })\r\n      toast({\r\n        title: 'Success',\r\n        description: `Account created for ${name} (${username})`,\r\n        status: 'success',\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n      setEntryForm('logIn')\r\n    }\r\n    setName('')\r\n    setEmail('')\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      mx={4}\r\n      px={10}\r\n      py={4}\r\n      border={4} \r\n      borderStyle=\"solid\"\r\n      borderColor=\"red.400\"\r\n      borderRadius={'xl'}\r\n      boxShadow={'lg'}\r\n      bg=\"gray.50\"\r\n    > \r\n      <VStack spacing={4}>\r\n        <Heading>{(entryForm === 'logIn') ? \"Log In\" : \"Sign Up\"}</Heading>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit}>\r\n          <VStack>\r\n            {entryForm === 'signUp' &&\r\n            <FormControl>\r\n              <FormLabel>Name</FormLabel>\r\n              <Input type='text' value={name} required onChange={({ target }) => setName(target.value)}/>\r\n            </FormControl>\r\n            }\r\n            {entryForm === 'signUp' &&\r\n            <FormControl>\r\n              <FormLabel>Email</FormLabel>\r\n              <Input type='email' value={email} required onChange={({ target }) => setEmail(target.value)}/>\r\n            </FormControl>\r\n            }\r\n            <FormControl>\r\n              <FormLabel>Username</FormLabel>\r\n              <Input type='text' value={username} required onChange={({ target }) => setUsername(target.value)}/>\r\n            </FormControl>\r\n            <FormControl>\r\n              <FormLabel>Password</FormLabel>\r\n              <Input type='password' value={password} required onChange={({ target }) => setPassword(target.value)}/>\r\n            </FormControl>\r\n            <Button type='submit' isFullWidth colorScheme=\"red\" bg=\"red.400\">{(entryForm === 'logIn') ? \"Submit\" : \"Create Account\"}</Button>\r\n          </VStack>\r\n        </form>\r\n        <Divider />\r\n        <Button size=\"sm\" colorScheme=\"blue\" color=\"white\" onClick={handleFormSwitch}>\r\n          {(entryForm === 'logIn') ? \"Don't have an account?\" : \"Already registered?\"}\r\n        </Button>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default EntryForm","import React from 'react'\r\nimport {\r\n  Box,\r\n  Center,\r\n  Flex,\r\n  Image,\r\n  Text,\r\n  VStack\r\n} from \"@chakra-ui/react\"\r\n\r\nimport EntryForm from './EntryForm'\r\n\r\nconst Landing = ({ setToken }) => {\r\n\r\n  return (\r\n   <Flex direction={{ base: 'column', md: 'row' }}>\r\n     <Box w={{ base: '100%', md: '62%' }} h={{ base: 'auto', md: '100vh' }} bg=\"blue.900\">\r\n       <Box pt={{ base: 0, md: 40 }} px={{ base: 2, md: 20 }}>\r\n         <VStack align=\"left\" spacing={{ base: 0, md: 4 }}>\r\n           <Image width={{ base: '240px', md: '480px' }} src='images/logo_cropped.png' />\r\n           <Text fontSize={{ base: 'xl', md: '4xl' }} color=\"white\" pb={{ base: 2, md: 10 }}>A Simple Way To Track Your Loans</Text>\r\n           <Text as=\"i\" fontSize={{ base: 'lg', md: '2xl' }} color=\"white\" pb={2}>\"Don't let your friends get away with it\"</Text>\r\n        </VStack>\r\n     </Box>\r\n     </Box>\r\n     <Box w={{ base: '100%', md: '38%' }} h={{ base: 'auto', md: '100vh' }} pt={{ base: '5', md: '0' }}>\r\n       <Center h=\"100%\">\r\n         <EntryForm setToken={setToken} />\r\n       </Center>\r\n     </Box>\r\n   </Flex>\r\n  )\r\n}\r\nexport default Landing","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useApolloClient } from '@apollo/client'\r\n\r\nconst Logout = ({ setToken }) => {\r\n  const navigate = useNavigate()\r\n  const client = useApolloClient()\r\n  \r\n  const handleClick = () => {\r\n    setToken(null)\r\n    localStorage.clear()\r\n    navigate('/')\r\n    client.clearStore() \r\n  }\r\n\r\n  return (\r\n    <button onClick={handleClick}>\r\n      Sign Out\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Logout","import React, { useRef } from 'react'\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerCloseButton,\r\n  IconButton,\r\n  Link,\r\n  useDisclosure,\r\n  VStack\r\n} from \"@chakra-ui/react\"\r\nimport { HamburgerIcon } from '@chakra-ui/icons'\r\n\r\nimport Logout from './Logout'\r\n\r\nconst MobileNav = ({ setToken }) => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure()\r\n  const btnRef = useRef()\r\n\r\n  return (\r\n    <>\r\n      <IconButton icon={<HamburgerIcon />} colorScheme=\"red.400\" size=\"lg\" ref={btnRef} onClick={onOpen} />\r\n      <Drawer\r\n        isOpen={isOpen}\r\n        placement=\"right\"\r\n        onClose={onClose}\r\n        finalFocusRef={btnRef}\r\n      >\r\n        <DrawerOverlay />\r\n        <DrawerContent bg=\"blue.900\">\r\n          <DrawerCloseButton color=\"white\" />\r\n          <DrawerHeader color=\"red.400\">yawmee</DrawerHeader>\r\n\r\n          <DrawerBody color=\"white\" fontSize={24}>\r\n            <VStack>\r\n              <Link as={RouterLink} to=\"/\" onClick={onClose}>Home</Link>\r\n              <Link as={RouterLink} to=\"/balances\" onClick={onClose}>Balances</Link>\r\n              <Link as={RouterLink} to=\"/add\" onClick={onClose}>Add Loan</Link>\r\n              <Link as={RouterLink} to=\"/friends\" onClick={onClose}>Friends</Link>\r\n              <Link as={RouterLink} to=\"/faq\" onClick={onClose}>FAQ</Link>\r\n              <Logout setToken={setToken} onClick={onClose}/>\r\n            </VStack>\r\n          </DrawerBody>\r\n\r\n          <DrawerFooter>\r\n            \r\n          </DrawerFooter>\r\n        </DrawerContent>\r\n      </Drawer>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileNav","import React from 'react'\r\nimport { Link as RouterLink } from \"react-router-dom\"\r\nimport { \r\n  Box,\r\n  Flex,\r\n  Image,\r\n  Spacer,\r\n  HStack,\r\n  Link\r\n } from \"@chakra-ui/react\"\r\n\r\nimport Logout from './Logout'\r\nimport MobileNav from './MobileNav'\r\n\r\nconst TopBar = ({ setToken }) => {\r\n\r\n  return (\r\n    <Box bg=\"brand.900\" w=\"100%\" p={2} color=\"red.400\">\r\n      <Flex align=\"center\">\r\n        <Box>\r\n          <Image width=\"180px\" src='images/logo_cropped.png' />\r\n        </Box>\r\n        <Spacer />\r\n        <Box display={{ base: 'none', md: 'block' }}>\r\n          <HStack spacing={4}>\r\n            <Link as={RouterLink} to=\"/\">Home</Link>\r\n            <Link as={RouterLink} to=\"/balances\">Balances</Link>\r\n            <Link as={RouterLink} to=\"/add\">Add Loan</Link>\r\n            <Link as={RouterLink} to=\"/friends\">Friends</Link>\r\n            <Link as={RouterLink} to=\"/faq\">FAQ</Link>\r\n            <Logout setToken={setToken} />\r\n          </HStack>\r\n        </Box>      \r\n        <Box display={{ base: 'block', md: 'none' }}>\r\n          <HStack>\r\n            <MobileNav setToken={setToken} />\r\n          </HStack>\r\n        </Box>      \r\n      </Flex>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default TopBar","import React from 'react'\r\nimport { Spinner } from \"@chakra-ui/react\"\r\n\r\nconst LoadingSpinner = () => {\r\n  return <Spinner color='red.400' size='xl' thickness={4} my=\"auto\" />\r\n}\r\n\r\nexport default LoadingSpinner","import React from 'react'\r\nimport { useQuery } from '@apollo/client'\r\nimport {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Text,\r\n  VStack\r\n} from \"@chakra-ui/react\"\r\n\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport { USER_DATA, GET_TOTAL_BALANCE } from '../queries'\r\n\r\nconst Home = () => {\r\n  const userResult = useQuery(USER_DATA)\r\n  const balanceResult = useQuery(GET_TOTAL_BALANCE)\r\n  \r\n  const evaluateSituation = (balance) => {\r\n    if (balance > 10000) {\r\n      return \"Are your friends still talking to you?\"\r\n    } else if (balance > 5000) {\r\n      return \"Being a bit generous, huh?\"\r\n    } else if (balance > 0) {\r\n      return \"Not too bad but better start collecting.\"\r\n    } else if (balance === 0) {\r\n      return \"Either you or your friends are very nice. If you have any.\"\r\n    } else if (balance < -10000) {\r\n      return \"You better start hiding.\"\r\n    } else if (balance < -5000) {\r\n      return \"Now it's really payback time.\" \r\n    } else {\r\n      return \"Pay it back before it gets out of hand.\"\r\n    }\r\n  }\r\n\r\n  if (userResult.loading || balanceResult.loading) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Center pb={4}>\r\n        <Heading>Hi {userResult.data.me.name}!</Heading>\r\n      </Center>\r\n      <Center>\r\n        <Text fontSize=\"xl\">Your current balance is:</Text>\r\n      </Center>\r\n      <VStack>\r\n      <Box\r\n        bg=\"red.400\"\r\n        color=\"white\"\r\n        m={6}\r\n        p={8}\r\n        borderStyle=\"solid\"\r\n        borderColor=\"red.400\"\r\n        borderRadius={'xl'}\r\n        boxShadow={'xl'}\r\n        maxW={\"sm\"}\r\n        textAlign=\"center\"\r\n      >\r\n        <Heading as=\"h3\" size=\"xl\">{(new Intl.NumberFormat('hu-HU').format(balanceResult.data.getTotalBalance))} HUF</Heading>\r\n      </Box>\r\n      </VStack>\r\n      <Center mt={12}>\r\n        <Heading as=\"h4\" size=\"lg\">{evaluateSituation(balanceResult.data.getTotalBalance)}</Heading>\r\n      </Center>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Badge,\r\n  Box,\r\n  Button,\r\n  Center,\r\n  Divider,\r\n  Heading,\r\n  HStack,\r\n  StackDivider,\r\n  Text,\r\n  useToast,\r\n  VStack\r\n} from \"@chakra-ui/react\"\r\nimport { AddIcon, MinusIcon, ArrowRightIcon } from '@chakra-ui/icons'\r\n\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport { GET_ALL_BALANCES, SETTLE_BALANCE, GET_TOTAL_BALANCE } from '../queries'\r\n\r\nconst Balances = () => {\r\n  const balancesResult = useQuery(GET_ALL_BALANCES)\r\n  const [settleBalance] = useMutation(SETTLE_BALANCE, {\r\n    refetchQueries: [ {query: GET_ALL_BALANCES}, {query: GET_TOTAL_BALANCE} ]\r\n  })\r\n\r\n  const toast = useToast()\r\n\r\n  const handleClick = (friendObject) => {\r\n    settleBalance({ variables: {counterparty: friendObject.id}})\r\n\r\n    toast({\r\n      title: \"Success\",\r\n      description: `Balance with ${friendObject.name} has been marked as settled.`,\r\n      status: \"success\",\r\n      duration: 9000,\r\n      isClosable: true,\r\n    })\r\n\r\n  }\r\n\r\n  if (balancesResult.loading) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    <Box w=\"100%\">\r\n      <Center pb={4}>\r\n        <Heading>Balances</Heading>\r\n      </Center>\r\n      <Box w=\"100%\">\r\n        <Accordion allowToggle>\r\n          {balancesResult.data.allBalances.map(friend => {\r\n            const balanceWithFriend = friend.loans.reduce((total, currentLoan) => {\r\n              return total + currentLoan.amount\r\n            }, 0)\r\n\r\n            return (\r\n            <AccordionItem key={friend.id} py={15}>\r\n              <h2>\r\n                <AccordionButton>\r\n                  <HStack flex=\"1\" textAlign=\"left\">\r\n                    <Heading as=\"h3\" size=\"md\">{friend.name}</Heading>\r\n                    <Badge variant=\"solid\" fontSize=\"md\" colorScheme={balanceWithFriend > 0 ? \"green\" : \"red\"}>{new Intl.NumberFormat('hu-HU').format(balanceWithFriend)} HUF</Badge>\r\n                  </HStack>\r\n                  <AccordionIcon />\r\n                </AccordionButton>\r\n              </h2>\r\n              <AccordionPanel pb={4}>\r\n                <VStack\r\n                  align=\"left\"\r\n                  spacing={4}\r\n                  divider={<StackDivider borderColor=\"gray.200\" />}                \r\n                >\r\n                {friend.loans.map(loan => {\r\n                  return(\r\n                      <HStack key={loan.id}>\r\n                        {loan.amount > 0 ? <AddIcon color=\"green\"/> : <MinusIcon color=\"red.400\" />}\r\n                        <Box>\r\n                          <Text as=\"b\">{new Date(Number(loan.createdAt)).toLocaleString()}</Text>\r\n                          <Text>{loan.item}</Text>\r\n                          <Badge colorScheme={loan.amount > 0 ? \"green\" : \"red\"}>{new Intl.NumberFormat('hu-HU').format(loan.amount)} HUF</Badge>\r\n                        </Box>\r\n                      </HStack>\r\n                  )\r\n                })}\r\n                </VStack>\r\n                <Divider my={4}/>\r\n                <HStack>\r\n                  <ArrowRightIcon w={10} h={10} color=\"blue.900\" />\r\n                  {balanceWithFriend > 0 \r\n                    ? \r\n                    <Box>\r\n                        <Text my={2} color=\"red.400\" fontSize=\"xl\">{friend.name} owes you {new Intl.NumberFormat('hu-HU').format(balanceWithFriend)} HUF.</Text>\r\n                        <Text my={2} color=\"red.400\" fontSize=\"xl\">It's up to the two of you how you settle it.</Text>\r\n                        <Text my={2} color=\"red.400\" fontSize=\"xl\">Once the loan is settled, you can remove all loans by clicking the button below.</Text>\r\n                        <Button \r\n                          colorScheme=\"blue\" \r\n                          onClick={() => handleClick(friend)}\r\n                        >\r\n                          Mark Loans Settled\r\n                        </Button>\r\n                      </Box>\r\n                    : \r\n                    <Box>\r\n                      <Text my={2} color=\"red.400\" fontSize=\"xl\">You owe {friend.name} {new Intl.NumberFormat('hu-HU').format(balanceWithFriend * -1)} HUF.</Text>\r\n                      <Text my={2} color=\"red.400\" fontSize=\"xl\">It's up to the two of you how you settle it.</Text>\r\n                      <Text my={2} color=\"red.400\" fontSize=\"xl\">{friend.name} will be able to remove the settled loans from the balance.</Text>\r\n                    </Box>\r\n                  }\r\n                </HStack>\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n            )\r\n          })}\r\n        </Accordion>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Balances","import React, { useState, useEffect } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport {\r\n  Button,\r\n  Center,\r\n  FormControl,\r\n  FormLabel,\r\n  Heading,\r\n  Input,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n  Select,\r\n  useToast,\r\n  VStack,\r\n} from \"@chakra-ui/react\"\r\n\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport { CREATE_LOAN, GET_FRIENDS, GET_ALL_BALANCES, GET_TOTAL_BALANCE } from '../queries'\r\n\r\nconst AddLoan = () => {\r\n  const [counterparty, setCounterparty] = useState('default')\r\n  const [amount, setAmount] = useState('')\r\n  const [item, setItem] = useState('')\r\n  const toast = useToast()\r\n\r\n  const friendsResult = useQuery(GET_FRIENDS)\r\n  const [createLoan, loanResult] = useMutation(CREATE_LOAN, {\r\n    refetchQueries: [ {query: GET_ALL_BALANCES}, {query: GET_TOTAL_BALANCE} ]\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (loanResult.data) {\r\n      toast({\r\n        title: \"Success\",\r\n        description: `Loan with ${loanResult.data.addLoan.debtor.name} has been added.`,\r\n        status: \"success\",\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })      \r\n    }\r\n  }, [loanResult.data, toast])\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault()\r\n    let variables = {\r\n      counterparty,\r\n      amount: Number(amount),\r\n      item\r\n    }\r\n    \r\n    createLoan({ variables })\r\n    \r\n    setAmount('')\r\n    setItem('')\r\n\r\n  }\r\n\r\n  if (friendsResult.loading) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Center pb={4}>\r\n        <Heading>Add Loan</Heading>\r\n      </Center>\r\n      <form onSubmit={handleSubmit}>\r\n        <VStack align=\"stretch\">\r\n          <FormControl>\r\n            <FormLabel>Your friend</FormLabel>\r\n            <Select required defaultValue={counterparty} onChange={({ target }) => setCounterparty(target.value)}>\r\n              <option value=\"default\" disabled hidden>Select Friend</option>\r\n              {friendsResult.data.getFriends\r\n                .filter(friendObject => friendObject.status === 'active')\r\n                .map(friendObject => {\r\n                return(<option key={friendObject.friend.id} value={friendObject.friend.id}>{friendObject.friend.name}</option>)\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel>owes you</FormLabel>\r\n            <NumberInput \r\n              value={amount}\r\n            >\r\n              <NumberInputField \r\n                onChange={({ target }) => setAmount(target.value)}\r\n                required\r\n                placeholder=\"HUF\"\r\n              />\r\n              <NumberInputStepper>\r\n                <NumberIncrementStepper />\r\n                <NumberDecrementStepper />\r\n              </NumberInputStepper>\r\n            </NumberInput>\r\n          </FormControl>\r\n          <FormControl>\r\n            <FormLabel>for</FormLabel>\r\n            <Input \r\n              onChange={({ target }) => setItem(target.value)}\r\n              required\r\n              placeholder=\"Item Name\"\r\n              value={item}\r\n            />\r\n          </FormControl>\r\n          <Button isFullWidth colorScheme=\"blue\" color=\"white\" type='submit'>Add Loan</Button>\r\n        </VStack>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddLoan","import React, { useState } from 'react'\r\nimport { useQuery, useMutation } from '@apollo/client'\r\nimport {\r\n  Box,\r\n  ButtonGroup,\r\n  Center,\r\n  Divider,\r\n  Flex,\r\n  FormControl,\r\n  Heading,\r\n  IconButton,\r\n  Input,\r\n  Spacer,\r\n  Text,\r\n  VStack,\r\n  useToast,\r\n} from \"@chakra-ui/react\"\r\nimport { DeleteIcon, CloseIcon, CheckIcon, EmailIcon } from '@chakra-ui/icons'\r\n\r\nimport LoadingSpinner from './LoadingSpinner'\r\nimport { \r\n  CREATE_FRIEND, \r\n  GET_FRIENDS, \r\n  UPDATE_FRIENDSHIP, \r\n  GET_ALL_BALANCES, \r\n  GET_TOTAL_BALANCE \r\n} from '../queries'\r\n\r\n\r\nconst Friends = () => {\r\n  const result = useQuery(GET_FRIENDS)\r\n  const [createFriend] = useMutation(CREATE_FRIEND, {\r\n    refetchQueries: [ {query: GET_FRIENDS} ],\r\n    onError: (error) => {\r\n      toast({\r\n        title: 'Error',\r\n        description: error.graphQLErrors[0].message,\r\n        status: 'error',\r\n        duration: 9000,\r\n        isClosable: true,\r\n      })\r\n    }\r\n  })\r\n  const [updateFriendship] = useMutation(UPDATE_FRIENDSHIP, {\r\n    refetchQueries: [ {query: GET_FRIENDS}, {query: GET_ALL_BALANCES}, {query: GET_TOTAL_BALANCE} ]\r\n  })\r\n\r\n  const [friendRequestName, setFriendRequestName] = useState('')\r\n  const toast = useToast()\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    createFriend({ variables: { \r\n      target: friendRequestName\r\n     } })\r\n    setFriendRequestName('')\r\n  }\r\n\r\n  const updateFriend = (friendshipId, action) => {\r\n    console.log(friendshipId + action)\r\n    updateFriendship({ variables: { friendshipId, action }})\r\n  }\r\n\r\n  if (result.loading) {\r\n    return <LoadingSpinner />\r\n  }\r\n\r\n  return (\r\n    <Box w=\"100%\">\r\n      <Center pb={4}>\r\n        <Heading>Friends</Heading>\r\n      </Center>\r\n      <VStack spacing={8}>\r\n        <Box w=\"100%\">\r\n          <Heading as=\"h4\" size=\"lg\" mb={4} color=\"red.400\">Your Friends</Heading>\r\n          <VStack align=\"stretch\" spacing={4}>\r\n              {result.data.getFriends.filter(f => f.status === 'active').length === 0\r\n                ? <Heading size=\"sm\">You haven't connected with any friends yet</Heading>\r\n                : result.data.getFriends\r\n                .filter(friendObject => friendObject.status === 'active')\r\n                .map(friendObject => {\r\n                  return (\r\n                    <Box key={friendObject.id}>\r\n                      <Flex>\r\n                        <Box>\r\n                          <Heading size=\"sm\">{friendObject.friend.name} ({friendObject.friend.username})</Heading>\r\n                          <Text>{friendObject.friend.email}</Text>\r\n                        </Box>\r\n                        <Spacer />\r\n                        <IconButton icon={<DeleteIcon />} onClick={() => updateFriend(friendObject.id, 'remove')} />\r\n                      </Flex>\r\n                      <Divider />\r\n                    </Box>\r\n                  )\r\n                  })\r\n              }\r\n          </VStack>          \r\n        </Box>\r\n        <Box w=\"100%\">\r\n          <Heading as=\"h4\" size=\"lg\" mb={4} color=\"red.400\">Pending Requests</Heading>\r\n          <VStack align=\"stretch\" spacing={4}>\r\n              {result.data.getFriends.filter(f => f.status === 'pending').length === 0\r\n                ? <Heading size=\"sm\">You don't have any pending friend requests</Heading>\r\n                : result.data.getFriends\r\n                  .filter(friendObject => friendObject.status === 'pending')\r\n                  .map(friendObject => {\r\n                    return (\r\n                      <Box key={friendObject.id}>\r\n                        <Flex>\r\n                          <Box>\r\n                            <Heading size=\"sm\">{friendObject.friend.name} ({friendObject.friend.username})</Heading>\r\n                            <Text>{friendObject.friend.email}</Text>\r\n                          </Box>\r\n                          <Spacer />\r\n                          {friendObject.isTarget\r\n                            ? <ButtonGroup isAttached>\r\n                                <IconButton icon={<CheckIcon />} mr=\"-px\" onClick={() => updateFriend(friendObject.id, 'accept')} />\r\n                                <IconButton icon={<CloseIcon />} onClick={() => updateFriend(friendObject.id, 'remove')} />\r\n                              </ButtonGroup>\r\n                            : <IconButton icon={<DeleteIcon />} onClick={() => updateFriend(friendObject.id, 'remove')} />\r\n                          }\r\n                        </Flex>\r\n                        <Divider />\r\n                      </Box>\r\n                    )\r\n                    })\r\n                }\r\n          </VStack>          \r\n        </Box>\r\n        <Box w=\"100%\">\r\n          <Heading as=\"h4\" size=\"lg\" mb={4} color=\"red.400\">Add Friend</Heading>\r\n          <form onSubmit={handleSubmit}>\r\n            <Flex>\r\n              <FormControl isRequired>\r\n                <Input \r\n                  maxW=\"99%\"\r\n                  type=\"text\" \r\n                  value={friendRequestName} \r\n                  placeholder=\"Friend's Username\"\r\n                  onChange={({ target }) => setFriendRequestName(target.value)} \r\n                />\r\n              </FormControl>\r\n              <IconButton icon={<EmailIcon />} type='submit' />\r\n            </Flex>\r\n          </form>\r\n        </Box>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Friends","const faqList = [\r\n  {\r\n    id: 1,\r\n    question: \"What's the purpose of this app?\",\r\n    answer: \"The purpose of this app is to quickly take note of small loans you've given to your friends, like paying for a beer or buying a concert ticket. Loans that will be paid back within days.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    question: \"How do I settle my debts?\",\r\n    answer: \"However you  want. This app helps you track your loans and mark when they're settled, that's all.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    question: \"Why can't I add 'I owe you's'?\",\r\n    answer: \"If you can open the app, you might as well just give the money to the person who gave the loan. Or send it via bank transfer. Also, we don't want loans to be duplicated.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    question: \"Can I remove friends?\",\r\n    answer: \"Yes, you can. All loans between the two of you will also be removed. So be wise about it.\"\r\n  },\r\n  {\r\n    id: 5,\r\n    question: \"Can I remove loans?\",\r\n    answer: \"Not yet, but soon.\"\r\n  },\r\n  {\r\n    id: 6,\r\n    question: \"Can I settle part of my debts?\",\r\n    answer: \"No, you can only settle all debts. This app is for micro-loans not long-term debts. If you can't settle them all at once, you probably shouldn't have asked for a loan in the first place.\"\r\n  },\r\n  {\r\n    id: 7,\r\n    question: \"Can I block people?\",\r\n    answer: \"Nice try, but no. If someone could add you, you probably let them know your username, probably because you have loans between the two of you. So don't ghost them.\"\r\n  },  \r\n  {\r\n    id: 8,\r\n    question: \"Can I add different currencies?\",\r\n    answer: \"Valid question. Not at the moment, but we plan to add this feature in the future.\"\r\n  },\r\n]\r\n\r\n\r\nexport default faqList","import React from 'react'\r\nimport {\r\n  Accordion,\r\n  AccordionItem,\r\n  AccordionButton,\r\n  AccordionPanel,\r\n  AccordionIcon,\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  Text,\r\n} from \"@chakra-ui/react\"\r\n\r\nimport faqList from '../faqList'\r\n\r\nconst Faq = () => {\r\n  return (\r\n    <Box w=\"100%\">\r\n      <Center pb={4}>\r\n        <Heading>FAQ</Heading>\r\n      </Center>\r\n      <Accordion allowMultiple>\r\n        {faqList.map((faq) => {\r\n          return(\r\n            <AccordionItem key={faq.id}>\r\n              <h2>\r\n                <AccordionButton>\r\n                  <Box flex=\"1\" textAlign=\"left\">\r\n                    <Text as=\"b\" fontSize=\"xl\">{faq.question}</Text>\r\n                  </Box>\r\n                  <AccordionIcon />\r\n                </AccordionButton>\r\n              </h2>\r\n              <AccordionPanel pb={4}>\r\n                {faq.answer}\r\n              </AccordionPanel>\r\n            </AccordionItem>\r\n          )\r\n        })}\r\n      </Accordion>\r\n    </Box>\r\n  )\r\n}\r\nexport default Faq","import React from 'react'\r\nimport {\r\n  Box,\r\n  Center,\r\n  Heading,\r\n  SkeletonText,\r\n} from \"@chakra-ui/react\"\r\n\r\nconst ErrorPage = () => {\r\n  return (\r\n    <Box w=\"100%\">\r\n      <Center pb={4}>\r\n        <Heading>Oh no! This page doesn't exist.</Heading>\r\n      </Center>\r\n      <SkeletonText mt='4' noOfLines={12} spacing='4' />\r\n    </Box>\r\n  )\r\n}\r\nexport default ErrorPage","import React from 'react'\r\nimport { Routes, Route } from \"react-router-dom\"\r\nimport { Container } from \"@chakra-ui/react\"\r\n\r\nimport Home from './Home'\r\nimport Balances from './Balances'\r\nimport AddLoan from './AddLoan'\r\nimport Friends from './Friends'\r\nimport Faq from './Faq'\r\nimport ErrorPage from './ErrorPage'\r\n\r\n\r\nconst Main = () => {\r\n  return (\r\n    <Container \r\n      maxW=\"container.md\" \r\n      centerContent\r\n      my={6} \r\n      p={4}\r\n      bg=\"white\"\r\n    > \r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"/balances\" element={<Balances />} />\r\n        <Route path=\"/add\" element={<AddLoan />} />\r\n        <Route path=\"/friends\" element={<Friends />} />\r\n        <Route path=\"/faq\" element={<Faq />} />\r\n        <Route path=\"*\" element={<ErrorPage />} />\r\n      </Routes>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Main","import React from 'react'\r\nimport { \r\n  Box,\r\n  Text,\r\n  VStack,\r\n } from \"@chakra-ui/react\"\r\n\r\nconst Footer = () => {\r\n\r\n  return (\r\n    <Box bg=\"red.400\" w=\"100%\" p={4} color=\"white\">\r\n      <VStack>\r\n        <Text>Made by Norman Wilde</Text>\r\n      </VStack>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\nimport {\n  BrowserRouter as Router,\n  Routes, Route\n} from \"react-router-dom\"\n\nimport { Box, SimpleGrid } from \"@chakra-ui/react\"\n\nimport Landing from './components/Landing'\nimport TopBar from './components/TopBar'\nimport Main from './components/Main'\nimport Footer from './components/Footer'\n\nconst App = () => {\n  const [token, setToken] = useState(null)\n\n  useEffect(() => {\n    const token = localStorage.getItem('user-token')\n    if (token) {\n      setToken(token)\n    }\n  }, [])\n\n  if (!token) {\n    return(\n      <div>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Landing setToken={setToken} />} />\n        </Routes>\n      </Router>\n      </div>\n    )\n  }\n\n  return(\n    <Box >\n      <Router>\n        <SimpleGrid\n          minHeight=\"100vh\"\n          templateRows=\"auto 1fr auto\"\n        >\n          <TopBar setToken={setToken} />\n          <Main />\n          <Footer />\n        </SimpleGrid>\n      </Router>\n    </Box>\n  )\n}\n\nexport default App\n","// 1. Import the extendTheme function\r\nimport { extendTheme } from \"@chakra-ui/react\"\r\n\r\n// 2. Extend the theme to include custom colors, fonts, etc\r\nconst colors = {\r\n  brand: {\r\n    900: \"#1a365d\",\r\n    800: \"#153e75\",\r\n    700: \"#2a69ac\",\r\n  },\r\n}\r\n\r\nconst fonts = {\r\n  heading: 'M PLUS 2',\r\n  body: 'M PLUS 2',\r\n}\r\n\r\nconst theme = extendTheme({ colors, fonts })\r\n\r\nexport default theme","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport theme from './theme'\nimport '@fontsource/m-plus-2'\nimport { \n  ApolloClient, ApolloProvider, HttpLink, InMemoryCache \n} from '@apollo/client' \nimport { setContext } from '@apollo/client/link/context'\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('user-token')\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `bearer ${token}` : null,\n    }\n  }\n})\n\nconst uri = process.env.PORT || \"http://localhost:4000\"\n\nconst httpLink = new HttpLink({ uri: `${uri}/graphql`})\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: authLink.concat(httpLink)\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </ApolloProvider>,  \n  document.getElementById('root')\n)"],"sourceRoot":""}